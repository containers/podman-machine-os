ARG FCOS_BASE_IMAGE=${FCOS_BASE_IMAGE}
FROM ${FCOS_BASE_IMAGE}

ARG PODMAN_PR_NUM=${PODMAN_PR_NUM}
ARG FEDORA_VERSION=${FEDORA_VERSION}

# Make required directories
RUN mkdir -p /etc/containers/registries.conf.d && \
    mkdir -p /etc/systemd/system.conf.d && \
    mkdir -p /etc/environment.d && \
    mkdir -p /etc/containers/registries.conf.d && \
    mkdir -p /etc/ssh/sshd_config.d

COPY  50-podman-makestep.conf /etc/chrony.d/50-podman-makestep.conf
COPY  docker-host.sh /etc/profile.d/docker-host.sh
COPY  999-podman-machine.conf /etc/containers/registries.conf.d/999-podman-machine.conf
COPY  10-inotify-instances.conf /etc/sysctl.d/10-inotify-instances.conf
COPY  99-podman-sshd.conf /etc/ssh/sshd_config.d/99-podman-sshd.conf
COPY  podman-iptables.conf /etc/modules-load.d/podman-iptables.conf

## Enables automatic login on the console;
## there's no security concerns here, and this makes debugging easier.
## xref https://docs.fedoraproject.org/en-US/fedora-coreos/tutorial-autologin/
COPY  10-autologin.conf /etc/systemd/system/serial-getty@.service.d/10-autologin.conf
COPY  10-autologin.conf /etc/systemd/system/getty@.service.d/10-autologin.conf

## Set delegate.conf so cpu,io subsystem is delegated to non-root users as well for cgroupv2
## by default
COPY delegate.conf /etc/systemd/system/user@.service.d/delegate.conf

# 1. For main branch builds, replace aardvark-dns, conmon, crun, netavark, podman, containers-common
# 2. For release branch builds, fetch the build from the copr job on the podman
# release PR.
# 3. Remove moby-engine, containerd, runc, zincati for both dev and release builds
# Note: Currently does not result in a size reduction for the container image
# 4. Even though the URLs mention `rawhide`, the repo and gpg files are Fedora
# release agnostic and such `rawhide` URLs are unlikely to change compared to URLs
# containing Fedora release numbers.
RUN if [[ ${PODMAN_PR_NUM} == "" ]]; then \
        curl -o /etc/yum.repos.d/rhcontainerbot-podman-next-fedora.repo https://copr.fedorainfracloud.org/coprs/rhcontainerbot/podman-next/repo/fedora-rawhide/rhcontainerbot-podman-next-fedora-rawhide.repo && \
        curl -o /etc/pki/rpm-gpg/rhcontainerbot-podman-next-fedora.gpg https://download.copr.fedorainfracloud.org/results/rhcontainerbot/podman-next/pubkey.gpg && \
        rpm-ostree override replace --experimental --freeze \
        --from repo="copr:copr.fedorainfracloud.org:rhcontainerbot:podman-next" \
        aardvark-dns crun netavark podman containers-common containers-common-extra crun-wasm; \
    else \
        shopt -s nullglob && \
        FILE="/var/tmp/rpms/*.rpm" && \
        if [[ -n $(echo $FILE) ]]; then dnf update -y --best --allowerasing $FILE; fi && \
        curl -o /etc/yum.repos.d/podman-release-copr.repo https://copr.fedorainfracloud.org/coprs/packit/containers-podman-${PODMAN_PR_NUM}/repo/fedora-rawhide/packit-containers-podman-${PODMAN_PR_NUM}-fedora-rawhide.repo && \
        curl -o /etc/pki/rpm-gpg/podman-release-copr.gpg https://download.copr.fedorainfracloud.org/results/packit/containers-podman-${PODMAN_PR_NUM}/pubkey.gpg && \
        rpm-ostree override replace --experimental --freeze \
        --from repo="copr:copr.fedorainfracloud.org:packit:containers-podman-${PODMAN_PR_NUM}" \
        podman; \
    fi

# Install subscription-manager and enable service to refresh certificates
# Install qemu-user-static for bootc
# Install gvisor-tap-vsock-gvforwarder for hyperv
# Install device-mapper (this satisfies the deps for qemu-user-static
# Install ansible for post-install configuration
# Remove unwanted packages
# Remove man pages (man binary is not present)
RUN dnf install -y --setopt=install_weak_deps=false \
    subscription-manager device-mapper qemu-user-static-aarch64 qemu-user-static-x86 && \
    dnf install -y gvisor-tap-vsock-gvforwarder ansible-core && \
    dnf remove -y moby-engine containerd runc toolbox qed-firmware docker-cli && \
    rm -fr /var/cache /usr/share/man && \
    dnf -y clean all && \
    ostree container commit

RUN systemctl enable rhsmcertd.service
# Patching qemu backed binfmt configurations to use the actual executable's permissions and not the interpreter's
RUN for x in /usr/lib/binfmt.d/*.conf; do sed 's/\(:[^C:]*\)$/\1C/' "$x" | tee /etc/binfmt.d/"$(basename "$x")"; done

COPY  core /var/lib/systemd/linger/core

# Disable ignition chrony overrides
RUN systemctl disable coreos-platform-chrony-config.service && \
    # Append the chrony conf dir location to the default config
    echo "confdir /etc/chrony.d" >> /etc/chrony.conf

# Disable the systemd resolver, the unit cannot be disabled/ or masked
# https://fedoraproject.org/wiki/Changes/systemd-resolved#Fully_opting_out_of_systemd-resolved_use
# https://github.com/containers/podman-machine-os/issues/18
# We have to remove /etc/resolv.conf because that is a symlink to the systemd-resolved dir which
# means NetworkManager will not populate it otherwise. To do that we use --network=none so podman
# does not mount over it and we can remove and create a real inode on the rootfs.
# We also remove all systemd-resolved content as the tmpfile.d shipped there will recreate the
# symlink otherwise. While creating an empty file used to be good enough since
# https://github.com/bootc-dev/bootc/pull/1167 that no longer works as it automatically removes
# this empty file for other reasons. Removing the package is much more robust so we do that.
RUN --network=none rm -vf /etc/resolv.conf && rpm -e systemd-resolved

# For Rosetta
# We should enable the service but for some reason the change is not
# carried into the VM even if we do so here, so for now this must be
# enabled via ignition by podman machine code:
# https://github.com/containers/podman/pull/21670#discussion_r1585790802
COPY rosetta-activation.service /etc/systemd/system/rosetta-activation.service
COPY rosetta-activation.sh /usr/local/bin/rosetta-activation.sh

# By default nothing is pulling the network-online.target so it does not get activated
RUN ln -s /usr/lib/systemd/system/network-online.target /etc/systemd/system/multi-user.target.wants/network-online.target